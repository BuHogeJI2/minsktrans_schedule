[{"C:\\Users\\Dmitry\\dev\\my_projects\\minsktrans_schedule\\src\\index.js":"1","C:\\Users\\Dmitry\\dev\\my_projects\\minsktrans_schedule\\src\\App.js":"2","C:\\Users\\Dmitry\\dev\\my_projects\\minsktrans_schedule\\src\\reportWebVitals.js":"3","C:\\Users\\Dmitry\\dev\\my_projects\\minsktrans_schedule\\src\\components\\map\\Map.jsx":"4","C:\\Users\\Dmitry\\dev\\my_projects\\minsktrans_schedule\\src\\components\\Main.jsx":"5","C:\\Users\\Dmitry\\dev\\my_projects\\minsktrans_schedule\\src\\components\\map\\mapStyle.js":"6","C:\\Users\\Dmitry\\dev\\my_projects\\minsktrans_schedule\\src\\constants.js":"7","C:\\Users\\Dmitry\\dev\\my_projects\\minsktrans_schedule\\src\\api.js":"8","C:\\Users\\Dmitry\\dev\\my_projects\\minsktrans_schedule\\src\\functions.js":"9","C:\\Users\\Dmitry\\dev\\my_projects\\minsktrans_schedule\\src\\components\\SearchForm\\SearchForm.jsx":"10","C:\\Users\\Dmitry\\dev\\my_projects\\minsktrans_schedule\\src\\components\\buttons\\OpenSearchFormButton.jsx":"11","C:\\Users\\Dmitry\\dev\\my_projects\\minsktrans_schedule\\src\\components\\map\\Markers.jsx":"12"},{"size":300,"mtime":1610824530804,"results":"13","hashOfConfig":"14"},{"size":137,"mtime":1610819688169,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"14"},{"size":2663,"mtime":1612101905203,"results":"17","hashOfConfig":"14"},{"size":1130,"mtime":1611739265720,"results":"18","hashOfConfig":"14"},{"size":2066,"mtime":1610206844725,"results":"19","hashOfConfig":"14"},{"size":873,"mtime":1611673027057,"results":"20","hashOfConfig":"14"},{"size":270,"mtime":1611739245934,"results":"21","hashOfConfig":"14"},{"size":3861,"mtime":1612285213872,"results":"22","hashOfConfig":"14"},{"size":1791,"mtime":1611562895612,"results":"23","hashOfConfig":"14"},{"size":1006,"mtime":1611562920543,"results":"24","hashOfConfig":"14"},{"size":1301,"mtime":1611672864625,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1tq0gf0",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"28"},"C:\\Users\\Dmitry\\dev\\my_projects\\minsktrans_schedule\\src\\index.js",[],["55","56"],"C:\\Users\\Dmitry\\dev\\my_projects\\minsktrans_schedule\\src\\App.js",[],"C:\\Users\\Dmitry\\dev\\my_projects\\minsktrans_schedule\\src\\reportWebVitals.js",[],"C:\\Users\\Dmitry\\dev\\my_projects\\minsktrans_schedule\\src\\components\\map\\Map.jsx",["57","58"],"import React, {useCallback, useEffect, useState} from 'react'\r\nimport {GoogleMap, withGoogleMap, withScriptjs, DirectionsRenderer} from \"react-google-maps\";\r\nimport MarkerClusterer from \"react-google-maps/lib/components/addons/MarkerClusterer\";\r\nimport mapStyle from \"./mapStyle\";\r\nimport {getStopMarkerData, splitData, splitTimes} from \"../../functions\";\r\nimport SearchForm from \"../SearchForm/SearchForm\";\r\nimport OpenSearchFormButton from \"../buttons/OpenSearchFormButton\";\r\nimport Markers from \"./Markers\";\r\nimport {\r\n    CLUSTER,\r\n    MAP_ZOOM,\r\n    MINSK_COORDS, UPPER_F_CHAR_CODE,\r\n} from \"../../constants\";\r\n\r\n\r\nconst Map = ({stopsTxt, routesTxt, timesTxt}) => {\r\n\r\n    const [stopsMarkerData, setStopsMarkerData] = useState([]);\r\n    const [currentStop, setCurrentStop] = useState(null);\r\n    const [directions, setDirections] = useState('');\r\n\r\n    const handleKeyPress = useCallback(event => {\r\n        if (event.charCode === UPPER_F_CHAR_CODE) {\r\n            const modalForm = document.querySelector('#modal_form_wrapper');\r\n            modalForm.style.display = 'block';\r\n\r\n            window.onclick = (event) => {\r\n                if (event.target === modalForm) {\r\n                    modalForm.style.display = 'none';\r\n                }\r\n            }\r\n        }\r\n    }, [])\r\n\r\n    const chooseCurrentStop = (value) => {\r\n        setCurrentStop(value)\r\n    }\r\n\r\n    useEffect(() => {\r\n        setStopsMarkerData(getStopMarkerData(stopsTxt));\r\n    }, [stopsTxt])\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('keypress', handleKeyPress);\r\n        return () => window.removeEventListener('keypress', handleKeyPress);\r\n    }, [handleKeyPress])\r\n\r\n    return (\r\n        <div>\r\n            <OpenSearchFormButton />\r\n            <GoogleMap defaultZoom={MAP_ZOOM}\r\n                       defaultOptions={{styles: mapStyle}}\r\n                       defaultCenter={MINSK_COORDS}>\r\n                <MarkerClusterer averageCenter\r\n                                 enableRetinaIcons\r\n                                 maxZoom={CLUSTER.maxZoom}\r\n                                 minimumClusterSize={CLUSTER.minimumSize}\r\n                                 gridSize={CLUSTER.gridSize}\r\n                >\r\n                    <Markers stopsMarkerData={stopsMarkerData} chooseCurrentStop={chooseCurrentStop} currentStop={currentStop}/>\r\n                </MarkerClusterer>\r\n                {directions && <DirectionsRenderer directions={directions}/>}\r\n            </GoogleMap>\r\n            <SearchForm stopsTxt={stopsTxt} routesTxt={routesTxt} setDirections={setDirections}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withScriptjs(withGoogleMap(Map));","C:\\Users\\Dmitry\\dev\\my_projects\\minsktrans_schedule\\src\\components\\Main.jsx",[],"C:\\Users\\Dmitry\\dev\\my_projects\\minsktrans_schedule\\src\\components\\map\\mapStyle.js",["59"],"export default [\r\n    {\r\n        \"featureType\": \"all\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"saturation\": \"32\"\r\n            },\r\n            {\r\n                \"lightness\": \"-3\"\r\n            },\r\n            {\r\n                \"visibility\": \"on\"\r\n            },\r\n            {\r\n                \"weight\": \"1.18\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"administrative\",\r\n        \"elementType\": \"labels\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"landscape\",\r\n        \"elementType\": \"labels\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"landscape.man_made\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"saturation\": \"-70\"\r\n            },\r\n            {\r\n                \"lightness\": \"14\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"poi\",\r\n        \"elementType\": \"labels\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road\",\r\n        \"elementType\": \"labels\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"transit\",\r\n        \"elementType\": \"labels\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"water\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"saturation\": \"100\"\r\n            },\r\n            {\r\n                \"lightness\": \"-14\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"water\",\r\n        \"elementType\": \"labels\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            },\r\n            {\r\n                \"lightness\": \"12\"\r\n            }\r\n        ]\r\n    }\r\n]","C:\\Users\\Dmitry\\dev\\my_projects\\minsktrans_schedule\\src\\constants.js",[],"C:\\Users\\Dmitry\\dev\\my_projects\\minsktrans_schedule\\src\\api.js",[],"C:\\Users\\Dmitry\\dev\\my_projects\\minsktrans_schedule\\src\\functions.js",["60","61"],"C:\\Users\\Dmitry\\dev\\my_projects\\minsktrans_schedule\\src\\components\\SearchForm\\SearchForm.jsx",[],["62","63"],"C:\\Users\\Dmitry\\dev\\my_projects\\minsktrans_schedule\\src\\components\\buttons\\OpenSearchFormButton.jsx",[],"C:\\Users\\Dmitry\\dev\\my_projects\\minsktrans_schedule\\src\\components\\map\\Markers.jsx",["64"],"import React, {useState} from 'react'\r\nimport {Marker, InfoWindow} from \"react-google-maps\";\r\nimport stopIcon from '../../assets/image/stop_icon.png'\r\nimport {STOP_ICON_HEIGHT, STOP_ICON_WIDTH} from \"../../constants\";\r\n\r\nconst areEqual = (prevProps, nextProps) => {\r\n    // return prevProps.stopsMarkerData === nextProps.stopsMarkerData;\r\n}\r\n\r\nconst Markers = React.memo(({stopsMarkerData, chooseCurrentStop, currentStop}) => {\r\n\r\n    const MARKER_ICON = {\r\n        url: stopIcon,\r\n        scaledSize: new window.google.maps.Size(STOP_ICON_WIDTH, STOP_ICON_HEIGHT)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {stopsMarkerData.map(marker => {\r\n                return <Marker key={marker.id}\r\n                               icon={MARKER_ICON}\r\n                               onClick={() => chooseCurrentStop(marker)}\r\n                               position={marker.position}>\r\n\r\n                    {currentStop && currentStop.id === marker.id && (\r\n                        <InfoWindow onCloseClick={() => chooseCurrentStop(null)}>\r\n                            <h2>\r\n                                {currentStop.name}\r\n                            </h2>\r\n                        </InfoWindow>)}\r\n                </Marker>\r\n            })}\r\n        </>\r\n    )\r\n}, areEqual)\r\n\r\nexport default Markers;",{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":5,"column":28,"nodeType":"71","messageId":"72","endLine":5,"endColumn":37},{"ruleId":"69","severity":1,"message":"73","line":5,"column":39,"nodeType":"71","messageId":"72","endLine":5,"endColumn":49},{"ruleId":"74","severity":1,"message":"75","line":1,"column":1,"nodeType":"76","endLine":101,"endColumn":2},{"ruleId":"69","severity":1,"message":"77","line":1,"column":8,"nodeType":"71","messageId":"72","endLine":1,"endColumn":13},{"ruleId":"78","severity":1,"message":"79","line":20,"column":40,"nodeType":"80","messageId":"81","endLine":20,"endColumn":42},{"ruleId":"65","replacedBy":"82"},{"ruleId":"67","replacedBy":"83"},{"ruleId":"69","severity":1,"message":"84","line":1,"column":16,"nodeType":"71","messageId":"72","endLine":1,"endColumn":24},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"no-unused-vars","'splitData' is defined but never used.","Identifier","unusedVar","'splitTimes' is defined but never used.","import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","'React' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["85"],["86"],"'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]