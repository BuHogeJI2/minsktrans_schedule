[{"C:\\Users\\Dmitry\\dev\\my_projects\\minsktrans_schedule\\src\\index.js":"1","C:\\Users\\Dmitry\\dev\\my_projects\\minsktrans_schedule\\src\\App.js":"2","C:\\Users\\Dmitry\\dev\\my_projects\\minsktrans_schedule\\src\\reportWebVitals.js":"3","C:\\Users\\Dmitry\\dev\\my_projects\\minsktrans_schedule\\src\\components\\map\\Map.jsx":"4","C:\\Users\\Dmitry\\dev\\my_projects\\minsktrans_schedule\\src\\components\\Main.jsx":"5","C:\\Users\\Dmitry\\dev\\my_projects\\minsktrans_schedule\\src\\components\\map\\mapStyle.js":"6","C:\\Users\\Dmitry\\dev\\my_projects\\minsktrans_schedule\\src\\constants.js":"7","C:\\Users\\Dmitry\\dev\\my_projects\\minsktrans_schedule\\src\\api.js":"8","C:\\Users\\Dmitry\\dev\\my_projects\\minsktrans_schedule\\src\\functions.js":"9","C:\\Users\\Dmitry\\dev\\my_projects\\minsktrans_schedule\\src\\components\\SearchForm\\SearchForm.jsx":"10","C:\\Users\\Dmitry\\dev\\my_projects\\minsktrans_schedule\\src\\components\\buttons\\OpenSearchFormButton.jsx":"11","C:\\Users\\Dmitry\\dev\\my_projects\\minsktrans_schedule\\src\\components\\map\\Markers.jsx":"12","C:\\Users\\Dmitry\\dev\\my_projects\\minsktrans_schedule\\src\\components\\map\\Directions.jsx":"13","C:\\Users\\Dmitry\\dev\\my_projects\\minsktrans_schedule\\src\\parser_times.js":"14"},{"size":300,"mtime":1610824530804,"results":"15","hashOfConfig":"16"},{"size":137,"mtime":1610819688169,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"16"},{"size":3042,"mtime":1612823567025,"results":"19","hashOfConfig":"16"},{"size":1130,"mtime":1612360968864,"results":"20","hashOfConfig":"16"},{"size":2066,"mtime":1610206844725,"results":"21","hashOfConfig":"16"},{"size":869,"mtime":1612824618480,"results":"22","hashOfConfig":"16"},{"size":270,"mtime":1611739245934,"results":"23","hashOfConfig":"16"},{"size":6507,"mtime":1612838233594,"results":"24","hashOfConfig":"16"},{"size":1791,"mtime":1611562895612,"results":"25","hashOfConfig":"16"},{"size":1006,"mtime":1611562920543,"results":"26","hashOfConfig":"16"},{"size":3396,"mtime":1612838261416,"results":"27","hashOfConfig":"16"},{"size":618,"mtime":1612820490832,"results":"28","hashOfConfig":"16"},{"size":3284,"mtime":1612821036904,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1tq0gf0",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"64"},"C:\\Users\\Dmitry\\dev\\my_projects\\minsktrans_schedule\\src\\index.js",[],["65","66"],"C:\\Users\\Dmitry\\dev\\my_projects\\minsktrans_schedule\\src\\App.js",[],"C:\\Users\\Dmitry\\dev\\my_projects\\minsktrans_schedule\\src\\reportWebVitals.js",[],"C:\\Users\\Dmitry\\dev\\my_projects\\minsktrans_schedule\\src\\components\\map\\Map.jsx",["67"],"import React, {useCallback, useEffect, useState} from 'react'\r\nimport {GoogleMap, withGoogleMap, withScriptjs, DirectionsRenderer} from \"react-google-maps\";\r\nimport MarkerClusterer from \"react-google-maps/lib/components/addons/MarkerClusterer\";\r\nimport mapStyle from \"./mapStyle\";\r\nimport {getStopMarkerData, getTimes} from \"../../functions\";\r\nimport SearchForm from \"../SearchForm/SearchForm\";\r\nimport OpenSearchFormButton from \"../buttons/OpenSearchFormButton\";\r\nimport Markers from \"./Markers\";\r\nimport {\r\n    CLUSTER,\r\n    MAP_ZOOM,\r\n    MINSK_COORDS, UPPER_F_CHAR_CODE,\r\n} from \"../../constants\";\r\nimport Directions from \"./Directions\";\r\n\r\n\r\nconst Map = ({stopsTxt, routesTxt, timesTxt}) => {\r\n\r\n    const [stopsMarkerData, setStopsMarkerData] = useState([]);\r\n    const [timesData, setTimesData] = useState(null);\r\n    const [currentStop, setCurrentStop] = useState(null);\r\n    const [directions, setDirections] = useState('');\r\n\r\n    const handleKeyPress = useCallback(event => {\r\n        if (event.charCode === UPPER_F_CHAR_CODE) {\r\n            const modalForm = document.querySelector('#modal_form_wrapper');\r\n            modalForm.style.display = 'block';\r\n\r\n            window.onclick = (event) => {\r\n                if (event.target === modalForm) {\r\n                    modalForm.style.display = 'none';\r\n                }\r\n            }\r\n        }\r\n    }, [])\r\n\r\n    const chooseCurrentStop = (value) => {\r\n        setCurrentStop(value)\r\n    }\r\n\r\n    useEffect(() => {\r\n        setStopsMarkerData(getStopMarkerData(stopsTxt));\r\n        setTimesData(getTimes(timesTxt));\r\n    }, [stopsTxt, timesTxt])\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('keypress', handleKeyPress);\r\n        return () => window.removeEventListener('keypress', handleKeyPress);\r\n    }, [handleKeyPress])\r\n\r\n    return (\r\n        <div>\r\n            <OpenSearchFormButton />\r\n            <GoogleMap defaultZoom={MAP_ZOOM}\r\n                       defaultOptions={{styles: mapStyle}}\r\n                       defaultCenter={MINSK_COORDS}>\r\n                <MarkerClusterer averageCenter\r\n                                 enableRetinaIcons\r\n                                 maxZoom={CLUSTER.maxZoom}\r\n                                 minimumClusterSize={CLUSTER.minimumSize}\r\n                                 gridSize={CLUSTER.gridSize}>\r\n                    <Markers stopsMarkerData={stopsMarkerData}\r\n                             currentStop={currentStop}\r\n                             routesTxt={routesTxt}\r\n                             stopsTxt={stopsTxt}\r\n                             setDirections={setDirections}\r\n                             times={timesData}\r\n                             chooseCurrentStop={chooseCurrentStop}/>\r\n                </MarkerClusterer>\r\n                {directions && <Directions directions={directions}/>}\r\n            </GoogleMap>\r\n            <SearchForm stopsTxt={stopsTxt} routesTxt={routesTxt} setDirections={setDirections}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withScriptjs(withGoogleMap(Map));","C:\\Users\\Dmitry\\dev\\my_projects\\minsktrans_schedule\\src\\components\\Main.jsx",[],"C:\\Users\\Dmitry\\dev\\my_projects\\minsktrans_schedule\\src\\components\\map\\mapStyle.js",["68"],"export default [\r\n    {\r\n        \"featureType\": \"all\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"saturation\": \"32\"\r\n            },\r\n            {\r\n                \"lightness\": \"-3\"\r\n            },\r\n            {\r\n                \"visibility\": \"on\"\r\n            },\r\n            {\r\n                \"weight\": \"1.18\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"administrative\",\r\n        \"elementType\": \"labels\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"landscape\",\r\n        \"elementType\": \"labels\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"landscape.man_made\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"saturation\": \"-70\"\r\n            },\r\n            {\r\n                \"lightness\": \"14\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"poi\",\r\n        \"elementType\": \"labels\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road\",\r\n        \"elementType\": \"labels\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"transit\",\r\n        \"elementType\": \"labels\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"water\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"saturation\": \"100\"\r\n            },\r\n            {\r\n                \"lightness\": \"-14\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"water\",\r\n        \"elementType\": \"labels\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            },\r\n            {\r\n                \"lightness\": \"12\"\r\n            }\r\n        ]\r\n    }\r\n]","C:\\Users\\Dmitry\\dev\\my_projects\\minsktrans_schedule\\src\\constants.js",[],"C:\\Users\\Dmitry\\dev\\my_projects\\minsktrans_schedule\\src\\api.js",[],"C:\\Users\\Dmitry\\dev\\my_projects\\minsktrans_schedule\\src\\functions.js",["69","70"],"import React from \"react\";\r\nimport {\r\n    COORD_MEASURE,\r\n    ROUTE_ID_INDEX,\r\n    ROUTE_NAME_INDEX,\r\n    ROUTE_STOPS_ID_INDEX,\r\n    STOP_COORDS_INDEX,\r\n    STOP_ID_INDEX,\r\n    STOP_INFO_LENGTH,\r\n    STOP_NAME_INDEX\r\n} from \"./constants\";\r\nimport {decode_times} from \"./parser_times\";\r\n\r\nexport const splitData = (file) => {\r\n    const splitedData = file.split('\\n');\r\n    return splitedData.map(line => line.split(';'))\r\n}\r\n\r\nexport const getStopMarkerData = (stopsTxt) => {\r\n    const splitStopsData = splitData(stopsTxt);\r\n\r\n    return splitStopsData.map(stopInfo => {\r\n        if (stopInfo.length === STOP_INFO_LENGTH) {\r\n            const stopName = stopInfo[STOP_NAME_INDEX];\r\n            if (stopName) {\r\n                const stopCoords = {\r\n                    lat: +stopInfo[STOP_COORDS_INDEX.lat] / COORD_MEASURE,\r\n                    lng: +stopInfo[STOP_COORDS_INDEX.lng] / COORD_MEASURE\r\n                }\r\n                const stopId = stopInfo[STOP_ID_INDEX]\r\n\r\n                return {\r\n                    id: stopId,\r\n                    name: stopName,\r\n                    position: stopCoords\r\n                }\r\n            }\r\n        }\r\n    }).filter(item => !!item);\r\n}\r\n\r\nexport const getSearchingRoutes = (request, routesTxt, stopsTxt) => {\r\n    const routes = splitData(routesTxt);\r\n    let searchingRoutes = [];\r\n\r\n    routes.forEach(route => {\r\n        let routeName = route[ROUTE_NAME_INDEX];\r\n        if (routeName !== 'RouteName') {\r\n            routeName && routeName.includes(request) && searchingRoutes.push(route);\r\n        }\r\n    })\r\n\r\n    if (!searchingRoutes.length) {\r\n        const stops = splitData(stopsTxt);\r\n        stops.forEach(stop => {\r\n            const stopName = stop[STOP_NAME_INDEX];\r\n            if (stopName && stopName.includes(request)) {\r\n                routes.forEach(route => {\r\n                    const stopsIdInRoute = route[ROUTE_STOPS_ID_INDEX]\r\n                    if (stopsIdInRoute && stopsIdInRoute.includes(stop[STOP_ID_INDEX])) {\r\n                        searchingRoutes.push(route)\r\n                    }\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    return searchingRoutes;\r\n}\r\n\r\nexport const getRoutesWithStop = (stop, routesTxt) => {\r\n    const routes = splitData(routesTxt);\r\n    let searchingRoutes = [];\r\n    if (stop.name) {\r\n        routes.forEach(route => {\r\n            const routeName = route[ROUTE_NAME_INDEX];\r\n            const stopsIdInRoute = route[ROUTE_STOPS_ID_INDEX]\r\n            if (stopsIdInRoute && (stopsIdInRoute.includes(stop.id) || routeName.includes(stop.name))) {\r\n                searchingRoutes.push(route)\r\n            }\r\n        })\r\n    }\r\n    return searchingRoutes;\r\n}\r\n\r\nexport const getDirectionData = (route, stopsTxt) => {\r\n    const stops = splitData(stopsTxt);\r\n    const stopsIdInRoute = route[ROUTE_STOPS_ID_INDEX].split(',');\r\n    let stopsInRoute = [];\r\n\r\n    stopsIdInRoute.forEach(stopId => {  // double loop, for save queue;\r\n        stops.forEach(stop => {\r\n            if (stop[STOP_ID_INDEX] === stopId) {\r\n                stopsInRoute.push(stop);\r\n            }\r\n        })\r\n    })\r\n\r\n    const waypointsStops = stopsInRoute.slice(1, -2); // except first and last stop;\r\n    let waypointsObjects = waypointsStops.map(stop => {\r\n        return {\r\n            location: {\r\n                lat: +stop[STOP_COORDS_INDEX.lat] / COORD_MEASURE,\r\n                lng: +stop[STOP_COORDS_INDEX.lng] / COORD_MEASURE\r\n            }\r\n        }\r\n    })\r\n\r\n    return {\r\n        origin: {\r\n            lat: +stopsInRoute[0][STOP_COORDS_INDEX.lat] / COORD_MEASURE,\r\n            lng: +stopsInRoute[0][STOP_COORDS_INDEX.lng] / COORD_MEASURE\r\n        },\r\n        destination: {\r\n            lat: +stopsInRoute[stopsInRoute.length - 1][STOP_COORDS_INDEX.lat] / COORD_MEASURE,\r\n            lng: +stopsInRoute[stopsInRoute.length - 1][STOP_COORDS_INDEX.lng] / COORD_MEASURE\r\n        },\r\n        waypoints: waypointsObjects\r\n    }\r\n}\r\n\r\nexport const setDirectionsData = (direction, setDirections) => {\r\n\r\n    const directionsService = new window.google.maps.DirectionsService();\r\n\r\n    directionsService.route({\r\n        origin: direction.origin,\r\n        destination: direction.destination,\r\n        travelMode: window.google.maps.TravelMode.DRIVING,\r\n        waypoints: direction.waypoints\r\n    }, (result, status) => {\r\n        if (status === window.google.maps.DirectionsStatus.OK) {\r\n            setDirections(result)\r\n        } else {\r\n            console.error('Direction Error:', result)\r\n        }\r\n    })\r\n}\r\n\r\nexport const getTimes = (times) => {\r\n    const splitedTimes = times.split('\\n');\r\n    return splitedTimes.map(timeLine => decode_times(timeLine))\r\n}\r\n\r\nexport const getStopNumberInRoutes = (routes, stop) => {\r\n    return routes.map(route => {\r\n        const stopsIdInRoute = route[ROUTE_STOPS_ID_INDEX].split(',');\r\n        const routeId = route[ROUTE_ID_INDEX];\r\n        return {\r\n            [routeId]: stopsIdInRoute.indexOf(stop.id)\r\n        }\r\n    })\r\n}\r\n\r\nexport const getTimesForRoutes = (routes, times) => {\r\n    const timesForStop = [];\r\n    routes.forEach(route => {\r\n        const routeId = route[ROUTE_ID_INDEX];\r\n        times.forEach(time => {\r\n            time.direction_id === routeId && timesForStop.push(time);\r\n        })\r\n    });\r\n    return timesForStop;\r\n}\r\n\r\nexport const getTimesForStopWithRoute = (stopNumberInRoutes, timesForRoutes) => {\r\n    let timesForStopWithRoute = {};\r\n    const routesNumberWithStop = stopNumberInRoutes.length;\r\n\r\n    for (let routeNumber = 0; routeNumber < routesNumberWithStop; routeNumber++) {\r\n        const timesInRoute = timesForRoutes[routeNumber];\r\n        const routes = stopNumberInRoutes[routeNumber];\r\n        const routeId = timesInRoute.direction_id;\r\n        const numberOfStop = routes[routeId];\r\n        const startTimesForStop = numberOfStop >= 0 && numberOfStop * timesInRoute.workdays.length;\r\n        const endTimesForStop = startTimesForStop + timesInRoute.workdays.length;\r\n\r\n        if (startTimesForStop >= 0) {\r\n            timesForStopWithRoute[routeId] = timesInRoute.times.slice(startTimesForStop, endTimesForStop);\r\n        } else {\r\n            timesForStopWithRoute[routeId] = false;\r\n        }\r\n    }\r\n\r\n    return timesForStopWithRoute;\r\n\r\n}\r\n\r\nexport const convertMinutesToHours = (timesInMinutes) => {\r\n\r\n    return timesInMinutes.map(time => {\r\n        const hours = Math.floor(time / 60);\r\n        const minutes = time % 60;\r\n        return `${hours}:${minutes}`\r\n\r\n    })\r\n}\r\n","C:\\Users\\Dmitry\\dev\\my_projects\\minsktrans_schedule\\src\\components\\SearchForm\\SearchForm.jsx",[],"C:\\Users\\Dmitry\\dev\\my_projects\\minsktrans_schedule\\src\\components\\buttons\\OpenSearchFormButton.jsx",[],"C:\\Users\\Dmitry\\dev\\my_projects\\minsktrans_schedule\\src\\components\\map\\Markers.jsx",["71","72"],"import React, {useRef, useState} from 'react'\r\nimport {Marker, InfoWindow} from \"react-google-maps\";\r\nimport stopIcon from '../../assets/image/stop_icon.png'\r\nimport {ROUTE_ID_INDEX, ROUTE_NAME_INDEX, STOP_ICON_HEIGHT, STOP_ICON_WIDTH} from \"../../constants\";\r\nimport {\r\n    convertMinutesToHours,\r\n    getDirectionData,\r\n    getRoutesWithStop, getStopNumberInRoutes,\r\n    getTimesForRoutes, getTimesForStopWithRoute,\r\n    setDirectionsData\r\n} from \"../../functions\";\r\nimport css from '../Main.module.css'\r\n\r\nconst areEqual = (prevProps, nextProps) => {\r\n    // return prevProps.stopsMarkerData === nextProps.stopsMarkerData;\r\n}\r\n\r\nconst Markers = React.memo((props) => {\r\n\r\n    const [currentRoute, setCurrentRoute] = useState(null);\r\n\r\n    const MARKER_ICON = {\r\n        url: stopIcon,\r\n        scaledSize: new window.google.maps.Size(STOP_ICON_WIDTH, STOP_ICON_HEIGHT)\r\n    }\r\n\r\n    const renderDirection = (route) => {\r\n        const directionData = getDirectionData(route, props.stopsTxt);\r\n        setDirectionsData(directionData, props.setDirections);\r\n    }\r\n\r\n    const renderRoutesWithStop = (currentStop) => {\r\n        const routes = getRoutesWithStop(currentStop, props.routesTxt);\r\n        return routes.map(route => {\r\n            return <div className={css.routeWithStop}>\r\n                <span onClick={()=>renderDirection(route)}>{route[ROUTE_NAME_INDEX]}</span> -->\r\n                <span onClick={()=>setCurrentRoute(route)}>Расписание</span>\r\n            </div>\r\n        })\r\n    }\r\n\r\n    const renderTimesWithStop = (currentStop) => {\r\n        let timesWithStop = [];\r\n        const routesWithStop = getRoutesWithStop(currentStop, props.routesTxt);\r\n        const stopNumberInRoutes = getStopNumberInRoutes(routesWithStop, currentStop);\r\n        const timesForRoutes = getTimesForRoutes(routesWithStop, props.times);\r\n        const timesForStop = getTimesForStopWithRoute(stopNumberInRoutes, timesForRoutes);\r\n\r\n        const currentRouteId = currentRoute[ROUTE_ID_INDEX];\r\n        const timeForRoute = convertMinutesToHours(timesForStop[currentRouteId])\r\n        console.log(timeForRoute)\r\n        return <div>\r\n            {currentRoute[ROUTE_NAME_INDEX]}: {timeForRoute}\r\n        </div>\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {props.stopsMarkerData.map(marker => {\r\n                return <Marker key={marker.id}\r\n                               icon={MARKER_ICON}\r\n                               onClick={() => props.chooseCurrentStop(marker)}\r\n                               position={marker.position}>\r\n\r\n                    {props.currentStop && props.currentStop.id === marker.id && (\r\n                        <InfoWindow onCloseClick={() => props.chooseCurrentStop(null)}>\r\n                            <div>\r\n                                <h2>\r\n                                    {props.currentStop.name}\r\n                                    {currentRoute && <span onClick={()=>setCurrentRoute(null)}>Вернуть маршруты</span>}\r\n                                </h2>\r\n                                {!currentRoute && renderRoutesWithStop(props.currentStop)}\r\n                                {currentRoute && renderTimesWithStop(props.currentStop)}\r\n                            </div>\r\n                        </InfoWindow>)}\r\n                </Marker>\r\n            })}\r\n        </>\r\n    )\r\n}, areEqual)\r\n\r\nexport default Markers;","C:\\Users\\Dmitry\\dev\\my_projects\\minsktrans_schedule\\src\\components\\map\\Directions.jsx",[],"C:\\Users\\Dmitry\\dev\\my_projects\\minsktrans_schedule\\src\\parser_times.js",["73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92"],"export function decode_times(encoded_line) {\r\n\r\n    var index = encoded_line.indexOf(\",\");\r\n    var direction_id = encoded_line.substr(0, index);\r\n    encoded_line = encoded_line.substr(index + 1);\r\n    var decoded_data = decode(encoded_line);\r\n\r\n    function decode(encoded_data) {\r\n\r\n        var timetable = [];\r\n        var weekdays = [];\r\n        var valid_from = [];\r\n        var valid_to = [];\r\n\r\n        var w;\r\n        var h;\r\n\r\n        var times = encoded_data.split(\",\");\r\n        var i, prev_t;\r\n        var i_max = times.length;\r\n\r\n        var zero_ground = [], plus = \"+\", minus = \"-\";\r\n\r\n        for (i = -1, w = 0, h = 0, prev_t = 0; ++i < i_max;) {\r\n            var t = times[i];\r\n\r\n            if (t == \"\") {\r\n                break;\r\n            }\r\n\r\n            var tag = t.charAt(0);\r\n            if (tag == plus || (tag == minus && t.charAt(1) == \"0\")) {\r\n                zero_ground[i] = \"1\";\r\n            }\r\n\r\n            prev_t += +(t);\r\n            timetable[w++] = prev_t;\r\n        }\r\n\r\n        for (var j = zero_ground.length; --j >= 0;) {\r\n            if (!zero_ground[j]) {\r\n                zero_ground[j] = \"0\";\r\n            }\r\n        }\r\n\r\n        // atkoduojame isigaliojimo datas\r\n        for (var j = 0; ++i < i_max;) {\r\n            var day = +(times[i]);\r\n            var k = times[++i];\r\n\r\n            if (k == \"\") {\r\n                k = w - j;\r\n                i_max = 0;\r\n            } else {\r\n                k = +(k);\r\n            }\r\n\r\n            while (k-- > 0) {\r\n                valid_from[j++] = day;\r\n            }\r\n        }\r\n\r\n        --i;\r\n\r\n        for (var j = 0, i_max = times.length; ++i < i_max;) {\r\n            var day = +(times[i]);\r\n            var k = times[++i];\r\n\r\n            if (k == \"\") {\r\n                k = w - j;\r\n                i_max = 0;\r\n            } else {\r\n                k = +(k);\r\n            }\r\n\r\n            while (k-- > 0) {\r\n                valid_to[j++] = day;\r\n            }\r\n        }\r\n\r\n        --i;\r\n\r\n        for (var j = 0, i_max = times.length; ++i < i_max;) {\r\n            var weekday = times[i];\r\n            var k = times[++i];\r\n\r\n            if (k == \"\") {\r\n                k = w - j;\r\n                i_max = 0;\r\n            } else {\r\n                k = +(k);\r\n            }\r\n\r\n            while (k-- > 0) {\r\n                weekdays[j++] = weekday;\r\n            }\r\n        }\r\n\r\n        --i;\r\n        h = 1;\r\n\r\n        for (var j = w, w_left = w, dt = 5, i_max = times.length; ++i < i_max;) {\r\n            dt += +(times[i]) - 5;\r\n            var k = times[++i];\r\n\r\n            if (k != \"\") {\r\n                k = +(k);\r\n                w_left -= k;\r\n            } else {\r\n                k = w_left;\r\n                w_left = 0;\r\n            }\r\n\r\n            while (k-- > 0) {\r\n                timetable[j] = dt + timetable[j - w];\r\n                ++j;\r\n            }\r\n\r\n            if (w_left <= 0) {\r\n                w_left = w;\r\n                dt = 5;\r\n                ++h;\r\n            }\r\n        }\r\n\r\n        return {\r\n            direction_id: direction_id,\r\n            workdays: weekdays,\r\n            times: timetable,\r\n            tag: zero_ground.join(\"\"),\r\n            valid_from: valid_from,\r\n            valid_to: valid_to\r\n        };\r\n    }\r\n\r\n    return decoded_data;\r\n}\r\n",["93","94"],{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":2,"column":49,"nodeType":"101","messageId":"102","endLine":2,"endColumn":67},{"ruleId":"103","severity":1,"message":"104","line":1,"column":1,"nodeType":"105","endLine":101,"endColumn":2},{"ruleId":"99","severity":1,"message":"106","line":1,"column":8,"nodeType":"101","messageId":"102","endLine":1,"endColumn":13},{"ruleId":"107","severity":1,"message":"108","line":22,"column":40,"nodeType":"109","messageId":"110","endLine":22,"endColumn":42},{"ruleId":"99","severity":1,"message":"111","line":1,"column":16,"nodeType":"101","messageId":"102","endLine":1,"endColumn":22},{"ruleId":"99","severity":1,"message":"112","line":43,"column":13,"nodeType":"101","messageId":"102","endLine":43,"endColumn":26},{"ruleId":"113","severity":1,"message":"114","line":27,"column":19,"nodeType":"115","messageId":"116","endLine":27,"endColumn":21},{"ruleId":"113","severity":1,"message":"114","line":32,"column":21,"nodeType":"115","messageId":"116","endLine":32,"endColumn":23},{"ruleId":"113","severity":1,"message":"114","line":32,"column":37,"nodeType":"115","messageId":"116","endLine":32,"endColumn":39},{"ruleId":"113","severity":1,"message":"114","line":32,"column":61,"nodeType":"115","messageId":"116","endLine":32,"endColumn":63},{"ruleId":"117","severity":1,"message":"118","line":47,"column":18,"nodeType":"101","messageId":"119","endLine":47,"endColumn":19},{"ruleId":"113","severity":1,"message":"114","line":51,"column":19,"nodeType":"115","messageId":"116","endLine":51,"endColumn":21},{"ruleId":"117","severity":1,"message":"118","line":65,"column":18,"nodeType":"101","messageId":"119","endLine":65,"endColumn":19},{"ruleId":"117","severity":1,"message":"120","line":65,"column":25,"nodeType":"101","messageId":"119","endLine":65,"endColumn":30},{"ruleId":"117","severity":1,"message":"121","line":66,"column":17,"nodeType":"101","messageId":"119","endLine":66,"endColumn":20},{"ruleId":"117","severity":1,"message":"122","line":67,"column":17,"nodeType":"101","messageId":"119","endLine":67,"endColumn":18},{"ruleId":"113","severity":1,"message":"114","line":69,"column":19,"nodeType":"115","messageId":"116","endLine":69,"endColumn":21},{"ruleId":"117","severity":1,"message":"118","line":83,"column":18,"nodeType":"101","messageId":"119","endLine":83,"endColumn":19},{"ruleId":"117","severity":1,"message":"120","line":83,"column":25,"nodeType":"101","messageId":"119","endLine":83,"endColumn":30},{"ruleId":"117","severity":1,"message":"122","line":85,"column":17,"nodeType":"101","messageId":"119","endLine":85,"endColumn":18},{"ruleId":"113","severity":1,"message":"114","line":87,"column":19,"nodeType":"115","messageId":"116","endLine":87,"endColumn":21},{"ruleId":"117","severity":1,"message":"118","line":102,"column":18,"nodeType":"101","messageId":"119","endLine":102,"endColumn":19},{"ruleId":"117","severity":1,"message":"120","line":102,"column":45,"nodeType":"101","messageId":"119","endLine":102,"endColumn":50},{"ruleId":"117","severity":1,"message":"122","line":104,"column":17,"nodeType":"101","messageId":"119","endLine":104,"endColumn":18},{"ruleId":"113","severity":1,"message":"123","line":106,"column":19,"nodeType":"115","messageId":"116","endLine":106,"endColumn":21},{"ruleId":"99","severity":1,"message":"124","line":122,"column":19,"nodeType":"101","messageId":"102","endLine":122,"endColumn":20},{"ruleId":"95","replacedBy":"125"},{"ruleId":"97","replacedBy":"126"},"no-native-reassign",["127"],"no-negated-in-lhs",["128"],"no-unused-vars","'DirectionsRenderer' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","'React' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'useRef' is defined but never used.","'timesWithStop' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-redeclare","'j' is already defined.","redeclared","'i_max' is already defined.","'day' is already defined.","'k' is already defined.","Expected '!==' and instead saw '!='.","'h' is assigned a value but never used.",["127"],["128"],"no-global-assign","no-unsafe-negation"]